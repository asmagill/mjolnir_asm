#! /usr/bin/env lua

-- Update package.path and package.cpath to support mjolnir luarocks

if not string.match(package.path, ";?"..os.getenv("HOME").."/%.mjolnir/rocks/") then
    package.path =  os.getenv("HOME").."/.mjolnir/rocks/share/lua/5.2/?.lua;"..
                    os.getenv("HOME").."/.mjolnir/rocks/share/lua/5.2/?/init.lua;"..
                    package.path
    package.cpath = os.getenv("HOME").."/.mjolnir/rocks/lib/lua/5.2/?.so;"..package.cpath
end

local tools = require("mjolnir._asm.modules")

function print_outdated(...)
    local results = tools.versions(...)
    local t = {}

    for i, v in pairs(results) do
        if v.upgrade then
            table.insert(t,i)
        end
    end

    table.sort(t)
    for _, i in ipairs(t) do print(i) end
end

function print_versions(...)
    local line_fmt = "%-30s  %-10s  %-10s  %-10s  %-10s" 
    local results, t = {}, {}
    print(string.format(line_fmt, "Module", "Installed", "Available", "Local-Only", "Upgradable"))
    print(string.rep("-", 78))

    results = tools.versions(...)
    for i, _ in pairs(results) do table.insert(t, i) end
    table.sort(t)

    for _, i in ipairs(t) do
        print(string.format(line_fmt, i, results[i].installed, results[i].available, results[i].local_only, results[i].upgrade))
    end
end

function print_trees()
    local results = tools.trees()
    local t = {}
    
    for _,i in ipairs(results) do table.insert(t, i.name) end
    
    table.sort(t)
    for _,i in ipairs(t) do
        print(i)
    end
end

local args = table.pack(...)
local cmd = table.remove(args,1)

if cmd == "trees" then
    print_trees()
elseif cmd == "versions" then
    print_versions(table.unpack(args))
elseif cmd == "outdated" then
    print_outdated(table.unpack(args))
else
    print("Usage:")
    print("    trees            list defined trees")
    print("    versions [tree]  list version report for tree (default mjolnir)")
    print("                     if tree is --all, list versions for all installed")
    print("                     modules in all trees")
    print("    outdated [tree]  list outdated modules from tree (default mjolnir)")
end
